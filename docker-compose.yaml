version: "3.3"

services:
  mysql:
    image: mysql:5.7
    container_name: mysql
    ports:
      - 33060:3306
    environment:
      MYSQL_ALLOW_EMPTY_PASSWORD: "yes"
      MYSQL_DATABASE: rest_api_slim_php
      MYSQL_USER: root
      MYSQL_PASSWORD: 
      MYSQL_ROOT_PASSWORD:
    labels:
      com.datadoghq.ad.check_names: '["mysql"]'
      com.datadoghq.ad.init_configs: '[{}]'
      com.datadoghq.ad.instances: '[{"host": "%%host%%","user": "root"}]' 
    volumes:
      - my-data:/var/lib/mysql
      - ./rest-api-slim-php/database/database.sql:/docker-entrypoint-initdb.d/database.sql
    networks:
      - backend  
  
  redis:
    image: redis:4.0.5-alpine
    container_name: redis
    ports:
      - 63790:6379
    hostname: redis
    labels:
      com.datadoghq.ad.check_names: '["redisdb"]'
      com.datadoghq.ad.init_configs: '[{}]'
      com.datadoghq.ad.instances: '[{"host": "%%host%%","port":"6379"}]'
    volumes:
      - redis-data:/data
    networks:
      - backend  

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: phpmyadmin
    depends_on:
      - mysql
    ports:
        - 8888:80
    environment:
        PMA_HOST: mysql
    networks:
      - backend  

  php-fpm:
    build: ./docker/php7
    container_name: rest-api-slim-php-php-container
    links:
      - mysql
      - redis
    environment:
      - PHP_FPM_ENABLE=1
      - PHP_FPM_SERVER_ADDR=php
      - PHP_FPM_SERVER_PORT=9000
      - PHP_FPM_TIMEOUT=${HTTPD_TIMEOUT_TO_PHP_FPM:-180}
      - DB_HOST=mysql
      - DB_NAME=rest_api_slim_php
      - DB_USER=root
      - DB_PASS=
      - DB_PORT=3306
      - DD_AGENT_HOST=datadog-agent
      - DD_TRACE_AGENT_PORT=8126
      - DD_DISTRIBUTED_TRACING=true
    labels:
      com.datadoghq.ad.check_names: '["php_fpm"]'
      com.datadoghq.ad.init_configs: '[{}]'
      com.datadoghq.ad.instances: '[{"status_url":"http://%%host%%/status", "ping_url":"http://%%host%%/ping", "use_fastcgi": false, "ping_reply": "pong"}]' 
    volumes:
      - ./rest-api-slim-php/:/var/www/html
    networks:
      - backend  

  nginxlatest:
    image: nginx:latest
    container_name: rest-api-slim-php-nginx-container
    ports:
      - "8081:80"
    volumes:
      - ./rest-api-slim-php/:/var/www/html
      - ./docker/nginx/conf.d:/etc/nginx/conf.d
    depends_on: 
     - php-fpm
     - datadog
    networks:
      - backend  
    labels:
      com.datadoghq.ad.check_names: '["nginx"]'
      com.datadoghq.ad.init_configs: '[{}]'
      com.datadoghq.ad.instances: '[{"nginx_status_url": "http://%%host%%:80/nginx_status", "tags": "%%tags%%"}]'

  nginx:
    image: node:12
    container_name: node12
    command: "node /usr/src/app/src/index.js"
    restart: always
    ports:
      - "3000:3000"
      - "443:443"
    volumes:
      - ./default.conf:/etc/nginx/conf.d/default.conf
      - ./postgresql-node-restapi/:/usr/src/app
    labels:
      com.datadoghq.ad.check_names: '["nginx"]'
      com.datadoghq.ad.init_configs: '[{}]'
      com.datadoghq.ad.instances: '[{"nginx_status_url": "http://%%host%%:3000/users", "tags": "%%tags%%"}]' 
    depends_on: 
      - datadog
    networks:
      - backend

  postgres:
    image: postgres:latest
    container_name: postgres
    restart: always
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_DB: postgres
      POSTGRES_PASSWORD: postgres
    labels:
      com.datadoghq.ad.check_names: '["postgres"]'
      com.datadoghq.ad.init_configs: '[{}]'
      com.datadoghq.ad.instances: '[{"host":"%%host%%", "port":5432,"username":"postgres","password":"postgres"}]' 
    networks:
      - backend

  pgadmin4:
    image: dpage/pgadmin4
    container_name: pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: pgadmin4@pgadmin.org
      PGADMIN_DEFAULT_PASSWORD: pgadmin4@pgadmin.org
    restart: always
    volumes:
      - ./servers.json:/pgadmin4/servers.json
    ports:
      - "5050:80"
    networks:
      - backend

  datadog:
    image: gcr.io/datadoghq/agent:7.23.1
    container_name: datadog-agent 
    hostname: datadog-agent 
    ports: 
      - "8126:8126"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /proc/:/host/proc/:ro
      - /sys/fs/cgroup:/host/sys/fs/cgroup:ro
    environment:
      - DD_LOGS_ENABLED=true
      - DD_APM_NON_LOCAL_TRAFFIC=true
      - DD_TRACE_ENABLED=true
      - DD_LOGS_CONFIG_CONTAINER_COLLECT_ALL=true
      - DD_API_KEY=
      - DD_APM_ENABLED=true
      - DD_PROCESS_AGENT_ENABLED=true
    networks:
      - backend      
    

volumes:
  redis-data:
  my-data:

networks:
  backend:
